#!/usr/bin/env ruby

require 'optparse'

options = {
    do_timer: false,
    skip_tests: false,
    no_sticky: false,
    disp_all: false,
}

option_parser = OptionParser.new do |opts|
  opts.on('-t', '--timer') do
    options[:do_timer] = true
  end

  opts.on('-s', '--skip-tests') do
    options[:skip_tests] = true
  end

  opts.on('-n', '--no-sticky') do
    options[:no_sticky] = true
  end

  opts.on('-a', '--display-all') do
    options[:disp_all] = true
  end
end

option_parser.parse!

thread = nil

st = ''
st = ' -D skipTests' if options[:skip_tests]

if options[:disp_all]
  result = system("mvn clean install#{st} 2>&1")
else
  if options[:do_timer]
    thread = Thread.new(Time.now) do |start_time|
      while true
        time = Time.now
        diff = time - start_time
        m = (diff / 60.0).floor
        s = '%06.3f' % (diff % 60)
        print "\r#{m}:#{s}"
        sleep(0.05)
      end
    end
  end

  output = `mvn clean install#{st} 2>&1`
  result = $?.success?

  unless thread.nil?
    thread.kill
    print "\r"
  end

  lines = output.lines.map(&:chomp)
  output.clear

  found = false

  lines.each do |line|
    if found
      puts line
    elsif line.start_with?('[ERROR] COMPILATION ERROR :') || line.start_with?('Results :')
      puts line
      found = true
    elsif line.start_with?('[INFO] BUILD SUCCESS')
      puts '[INFO] ------------------------------------------------------------------------'
      puts line
      found = true
    end
  end

  unless found
    lines.each do |line|
      puts line
    end
  end
end

msg = 'Tests'
msg = 'Build' if options[:skip_tests]

if result
  message = 'Successful'
else
  message = 'Failed'
end

sticky = ' -s'
sticky = '' if options[:no_sticky]

`growlnotify -n Terminal -a Terminal#{sticky} -m "#{msg} #{message}" -t "mvn clean install#{st}"`